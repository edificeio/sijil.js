{"version":3,"file":null,"sources":["../../src/services/require/httprequire.service.ts","../../src/services/require/require.interface.ts","../../src/services/parser/parser.interface.ts","../../src/services/parser/fragments.parser.ts","../../src/services/bundles.service.ts","../../src/services/sijil.opts.ts","../../src/components/s5l.component.ts","../../src/pipes/translate.pipe.ts","../../src/sijil.module.ts"],"sourcesContent":["import { RequireService } from './require.interface'\nimport { Injectable } from '@angular/core'\nimport { Http } from '@angular/http'\n\n/**\n * Fetches a bundle from a target url.\n * \n * @export\n * @class HttpRequireService\n * @implements {RequireService}\n */\n@Injectable()\nexport class HttpRequireService implements RequireService {\n\n    constructor(private http: Http){}\n\n    load(url) : Promise<Object> {\n        return this.http.get(url).toPromise()\n            .then(data => data.json())\n    }\n\n}","/**\n * Service used to fetch bundles.\n * \n * @export\n * @abstract\n * @class RequireService\n */\nexport abstract class RequireService {\n    /**\n     * Fetch a bundle. \n     * @memberOf RequireService\n     */\n    load: (from: any) => Promise<Object>\n}","export class ParserError extends Error {\n    constructor(public message: string, public fragment: string) {\n        super(message)\n    }\n}\n\nexport type ParserCallback = (_ : ParserError) => string\n/**\n * Parses logic inside translations.\n * \n * @export\n * @abstract\n * @class Parser\n */\nexport abstract class Parser {\n    /**\n     * Processes a string, isolating logic fragments and compiling them.\n     * \n     * @memberOf Parser\n     */\n    compile: (text: string, parameters: any, error?: ParserCallback) => string\n}","import { Parser, ParserCallback, ParserError } from './parser.interface'\n\n/**\n * The default Sijil parser.\n * \n * - Input : bundle value (translation) + parameters (Object or Array)\n * - Output : compiled translation\n * \n * Logic is contained inside mustache blocks : {{ LOGIC BLOCK }}\n * \n * There are two variants :\n *  - A single parameter key (when the params are contained inside an object) or index (params contained inside an array)\n *      \n * Examples: \n * \n * {{ key }} + { \"key\" : \"my key\" } = my key \n * \n * {{ 1 }} + [1, 2] = 2\n * \n *  - A ternary-like condition\n *      \n * {{ condition ? trueValue : falseValue }}\n * Where condition may be : a single parameter key/index, or 2 clauses with the following operators : ==, >, =>, <=, < \n * \n * Examples: \n * \n * (the $ sign to refer to a variable is mandatory when a clause contains more than 1 word)\n * \n * {{ count > 1 ? $count cats : 1 cat }} + {\"count\": 10} = 10 cats\n * {{ 1 < count ? $count cats : 1 cat }} + {\"count\": 1} = 1 cat\n * \n * @export\n * @class FragmentsParser\n * @implements {Parser}\n */\nexport class FragmentsParser implements Parser {\n\n    constructor(){}\n\n    private static delimiters: string[] = ['{{', '}}']\n    private static delimRegexp = new RegExp(`${FragmentsParser.delimiters[0]}[^}]+${FragmentsParser.delimiters[1]}`, 'gm')\n\n    private static defaultErrorCallback : ParserCallback = (e: ParserError) => {\n        console.error(e)\n        return e.fragment\n    }\n\n    private getParameter(parameters: Object | any[], fragment: string, strict?: boolean) : string {\n        let splittedFrag = fragment.split(/\\s+/)\n        if(splittedFrag.length === 1) {\n            return fragment[0] === \"$\" ? \n                parameters[fragment.substr(1)] : \n                strict ? \n                    fragment : \n                    parameters[fragment] || fragment\n        }\n        return fragment.split(/\\s+/).reduce((l, r) => {\n            l.push(r[0] === \"$\" ? parameters[r.substr(1)] : r)\n            return l\n        }, []).join(' ')\n    }\n\n    private compileFragment(fragment: string, parameters: Object | any[]): string {\n        fragment = fragment.replace(/{{|}}/g, '')\n\n        let interrogationIndex, dotsIndex\n        if ((interrogationIndex = fragment.indexOf('?')) > 0 && (dotsIndex = fragment.lastIndexOf(':')) > 1) {\n            let condition = fragment.substring(0, interrogationIndex).trim()\n            let trueReturn = fragment.substring(interrogationIndex + 1, dotsIndex).trim()\n            let falseReturn = fragment.substring(dotsIndex + 1).trim()\n            let computedTrueReturn = this.getParameter(parameters, trueReturn)\n            let computedFalseReturn = this.getParameter(parameters, falseReturn)\n\n            let splittedCondition = condition.split(/\\s+/)\n\n            if (splittedCondition.length === 1) {\n                \n                // Single variable case\n\n                let variable = parameters[splittedCondition[0]]\n\n                return variable ?\n                    computedTrueReturn :\n                    computedFalseReturn\n\n            } else if (splittedCondition.length === 3) {\n               \n                // Operator case\n\n                let leftHandParam = this.getParameter(parameters, splittedCondition[0], parameters instanceof Array)\n                let rightHand = this.getParameter(parameters, splittedCondition[2], parameters instanceof Array)\n                let comparisonOperator = splittedCondition[1]\n\n                switch (comparisonOperator) {\n                    case '==':\n                        return leftHandParam == rightHand ?\n                            computedTrueReturn :\n                            computedFalseReturn\n                    case '>':\n                        return leftHandParam > rightHand ?\n                            computedTrueReturn :\n                            computedFalseReturn\n                    case '>=':\n                        return leftHandParam >= rightHand ?\n                            computedTrueReturn :\n                            computedFalseReturn\n                    case '<':\n                        return leftHandParam < rightHand ?\n                            computedTrueReturn :\n                            computedFalseReturn\n                    case '<=':\n                        return leftHandParam <= rightHand ?\n                            computedTrueReturn :\n                            computedFalseReturn\n                    default:\n                        throw new ParserError(`Invalid conditional operator for fragment : ${fragment}`, fragment)\n                }\n                \n            } else {\n                throw new ParserError(`Invalid condition for fragment : ${fragment}`, fragment)\n            }\n        } else {\n            fragment = fragment.trim()\n            return parameters[fragment]\n        }\n    }\n\n    compile(rawTranslation: string, parameters: Object, onError?: ParserCallback): string {\n\n        let parts = rawTranslation.split(FragmentsParser.delimRegexp)\n        let fragments = rawTranslation.match(FragmentsParser.delimRegexp)\n\n        let compiledTranslation = \"\"\n\n        if (!onError)\n            onError = FragmentsParser.defaultErrorCallback\n\n        if (!fragments) {\n            compiledTranslation += rawTranslation\n        } else {\n            for (let i = 0; i < parts.length; i++) {\n                compiledTranslation += parts[i]\n                if (i > fragments.length - 1)\n                    continue\n                try {\n                    compiledTranslation += this.compileFragment(fragments[i], parameters)\n                } catch (e) {\n                    compiledTranslation += onError(e)\n                }\n            }\n        }\n\n        return compiledTranslation\n\n    }\n\n}","import { RequireService, SijilOpts, Parser } from './index'\n\n/**\n * Defines a BundlesService, whice is the main entry point for Sijil operations.\n * \n * A BundlesServices has three dependencies :\n * - RequireService : Used to fetch bundles\n * - Parser : Used to parse logic inside bundle values\n * - SijilOpts : An object containing custom settings\n */\nexport class BundlesService {\n\n    constructor(private requireService: RequireService, private parser: Parser, sijilOpts: SijilOpts) {\n        this.defaultLanguage = sijilOpts.defaultLanguage\n        if(!this.defaultLanguage && typeof window !== 'undefined'){\n            this.defaultLanguage = window.navigator.language.split('-')[0]\n        }\n        this.currentLanguage = this.defaultLanguage\n    }\n\n    private bundles: Object = {}\n    /**\n     * Fallback language.\n     */\n    defaultLanguage : string\n    /**\n     * Current language.\n     */\n    currentLanguage : string\n\n    /**\n     * Add keys/values to an existing bundle, or create it if missing.\n     * \n     * @param {Object} bundle An object containing translations as key / values.\n     * @param {string} [lang] The language to map the bundle with, or the current langugage if omitted. \n     */\n    addToBundle(bundle: Object, lang?: string) : void {\n        let targetLanguage = lang || this.currentLanguage || this.defaultLanguage || 'en'\n\n        if(!this.bundles[targetLanguage])\n            this.bundles[targetLanguage] = {}\n\n        for(let key in bundle) {\n            this.bundles[targetLanguage][key] = bundle[key]\n        }\n\n        if(!this.currentLanguage)\n            this.currentLanguage = lang\n    }\n\n    /**\n     * Loads a bundle and associates it with a language.\n     * If the target language already contains key/values, then we mixin the new bundle and the existing one.\n     * \n     * @param {any} where The path, or whatever the RequireService needs to fetch the bundle.\n     * @param {string} [lang] The target language, or the current language if omitted.\n     * @returns {Promise<void>} A Promise, because the RequireService can be (is - by default) asynchronous.\n     */\n    loadBundle(where, lang?: string) : Promise<void> {\n        return this.requireService.load(where)\n            .then(bundle => {\n                this.addToBundle(bundle, lang)\n            })\n    }\n    /**\n     * Loads multiple bundles and associates then with a language.\n     * \n     * @see {@link loadBundle}\n     */\n    loadBundles(specs: { lang: string, where: any }[]): Promise<void[]> {\n        return Promise.all(specs.map((spec) => {\n            return this.loadBundle(spec.where, spec.lang)\n        }))\n    }\n\n    /**\n     * Removes a bundle from the bundles list.\n     * \n     * @param {string} lang Language to remove.\n     */\n    unloadBundle(lang: string) : void {\n        delete this.bundles[lang]\n    }\n\n    /**\n     * @returns {string[]} Returns a list of all loaded languages.\n     */\n    getLoadedLanguages() : string[] {\n        return Object.keys(this.bundles)\n    }\n\n    /**\n     * Translates a single key into a target language, using the parameters provided if needed.\n     * \n     * @param {string} key Key to translate\n     * @param {(Object | any[])} [parameters] Parameters to use if the translation contains logic.\n     * @param {string} [lang] Target language, of the current language if omitted.\n     * @returns {string} The computed translation, or the key if no match was found in the bundles (including the fallback language bundle).\n     */\n    translate(key: string, parameters?: Object | any[], lang?: string) : string {\n        let targetLanguage = lang || this.currentLanguage\n        \n        let rawTranslation : string = this.bundles[targetLanguage] &&\n            this.bundles[targetLanguage][key] ||\n            this.defaultLanguage &&\n            this.bundles[this.defaultLanguage] && \n            this.bundles[this.defaultLanguage][key] ||\n            key\n\n        if(rawTranslation !== key && parameters) {\n            return this.parser.compile(rawTranslation, parameters, (e) => { console.error(e); return key })\n        } else {\n            return rawTranslation\n        }\n\n    }\n\n}","/**\n * Contains Sijil options.\n * \n * @export\n * @abstract\n * @class SijilOpts\n */\nexport abstract class SijilOpts {\n    /** Fallback language when a translation is not available in the current language. */\n    defaultLanguage: string\n}\n\nexport let defaultSijilOpts : SijilOpts = {\n    defaultLanguage: typeof window !== 'undefined' ? window.navigator.language.split('-')[0] : undefined\n}","import { Component, Input, ElementRef, ViewChild, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\nimport { BundlesService } from '../services'\n\n@Component({\n    selector: 's5l',\n    template: `\n    <span #wrapper>\n        <ng-content></ng-content>\n    </span>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class S5lComponent implements AfterViewInit {\n\n    constructor(private bundlesService: BundlesService, \n        private changeDetectorRef: ChangeDetectorRef){} \n\n    @ViewChild(\"wrapper\") wrapperRef: ElementRef\n\n    private value: string\n    private loaded: boolean\n\n    @Input(\"s5l-params\")\n    private parameters: Object | any[]\n    @Input(\"s5l-lang\")\n    private fixedLanguage: string\n\n    private refreshTranslation() {\n        this.wrapperRef.nativeElement.innerHTML = this.bundlesService.translate(this.value, this.parameters, this.fixedLanguage)\n    }\n\n    ngAfterViewInit() : void {\n        this.value = this.wrapperRef.nativeElement.innerHTML.trim()\n        this.loaded = true\n    }\n\n    ngDoCheck() {\n        if(!this.loaded)\n            return\n        this.refreshTranslation()\n    }\n}","import { BundlesService } from '../services';\nimport { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({name: 'translate', pure: false})\nexport class TranslatePipe {\n    \n    constructor(private bundlesService: BundlesService){}\n\n    transform(key: string, parameters?: Object | any[], lang?: string) : string {\n        return this.bundlesService.translate(key, parameters, lang)\n    }\n    \n}","import { NgModule, ModuleWithProviders, Type } from '@angular/core'\nimport { HttpModule } from '@angular/http'\n\nimport { S5lComponent } from './components'\nimport { TranslatePipe } from './pipes/translate.pipe'\nimport { HttpRequireService, RequireService, BundlesService, \n    SijilOpts, defaultSijilOpts, Parser, FragmentsParser } from './services/index'\nimport './rxjs-includes'\n\nlet moduleProviders = [\n    { provide: BundlesService, useClass: BundlesService, deps: [ RequireService, Parser, SijilOpts ] },\n    { provide: RequireService, useClass: HttpRequireService },\n    { provide: Parser, useClass: FragmentsParser },\n    { provide: SijilOpts, useValue: defaultSijilOpts }\n]\n\n/**\n * Sijil angular2 module.\n * \n * Usage :\n * \n * ```typescript\n * import { SijilModule } from 'sijil/dist'\n *\n * @NgModule({\n *   imports: [\n *       // ... //\n *      SijilModule\n *       // ... //\n *    ]\n * })\n * ```\n */\n@NgModule({\n    imports: [ HttpModule ],\n    declarations: [ S5lComponent, TranslatePipe ],\n    providers: moduleProviders,\n    exports: [ S5lComponent, TranslatePipe ]\n})\nexport class SijilModule {\n\n    static forRoot(require?: Type<RequireService>, parser?: Type<Parser>, options?: SijilOpts): ModuleWithProviders {\n        moduleProviders[1]['useClass'] = require || HttpRequireService\n        moduleProviders[2]['useClass'] = parser  || FragmentsParser\n        moduleProviders[3]['useValue'] = options || defaultSijilOpts\n        \n        return {\n            ngModule: SijilModule,\n            providers: moduleProviders\n        };\n    }\n\n}"],"names":["Injectable","ViewChild","Input","Component","ChangeDetectionStrategy","Pipe","NgModule","HttpModule"],"mappings":"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"}